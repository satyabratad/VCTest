DECLARE @CurrentMigration [nvarchar](max)

IF object_id('[dbo].[__MigrationHistory]') IS NOT NULL
    SELECT @CurrentMigration =
        (SELECT TOP (1) 
        [Project1].[MigrationId] AS [MigrationId]
        FROM ( SELECT 
        [Extent1].[MigrationId] AS [MigrationId]
        FROM [dbo].[__MigrationHistory] AS [Extent1]
        WHERE [Extent1].[ContextKey] = N'Bill2Pay.Model.DataContextMigrations.Configuration'
        )  AS [Project1]
        ORDER BY [Project1].[MigrationId] DESC)

IF @CurrentMigration IS NULL
    SET @CurrentMigration = '0'

IF @CurrentMigration < '201703200937411_UAT'
BEGIN
    CREATE TABLE [dbo].[ImportDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [AccountNo] [nvarchar](20),
        [ImportSummaryId] [int] NOT NULL,
        [TINCheckStatus] [nvarchar](2),
        [TINCheckRemarks] [nvarchar](512),
        [SubmissionSummaryId] [int],
        [TINType] [nvarchar](1),
        [TIN] [nvarchar](9),
        [PayerOfficeCode] [nvarchar](4),
        [GrossAmount] [decimal](18, 2),
        [CNPTransactionAmount] [decimal](18, 2),
        [FederalWithHoldingAmount] [decimal](18, 2),
        [JanuaryAmount] [decimal](18, 2),
        [FebruaryAmount] [decimal](18, 2),
        [MarchAmount] [decimal](18, 2),
        [AprilAmount] [decimal](18, 2),
        [MayAmount] [decimal](18, 2),
        [JuneAmount] [decimal](18, 2),
        [JulyAmount] [decimal](18, 2),
        [AugustAmount] [decimal](18, 2),
        [SeptemberAmount] [decimal](18, 2),
        [OctoberAmount] [decimal](18, 2),
        [NovemberAmount] [decimal](18, 2),
        [DecemberAmount] [decimal](18, 2),
        [ForeignCountryIndicator] [nvarchar](1),
        [FirstPayeeName] [nvarchar](40),
        [SecondPayeeName] [nvarchar](40),
        [PayeeMailingAddress] [nvarchar](40),
        [PayeeCity] [nvarchar](40),
        [PayeeState] [nvarchar](2),
        [PayeeZipCode] [nvarchar](9),
        [SecondTINNoticed] [nvarchar](1),
        [FillerIndicatorType] [nvarchar](1),
        [PaymentIndicatorType] [nvarchar](1),
        [TransactionCount] [int] NOT NULL,
        [MerchantCategoryCode] [nvarchar](4),
        [SpecialDataEntry] [nvarchar](60),
        [StateWithHolding] [decimal](18, 2),
        [LocalWithHolding] [decimal](18, 2),
        [CFSF] [nvarchar](2),
        [NameControl] [nvarchar](4),
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        [MerchantId] [int],
        [PSEDetails_Id] [int],
        CONSTRAINT [PK_dbo.ImportDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_ImportSummaryId] ON [dbo].[ImportDetails]([ImportSummaryId])
    CREATE INDEX [IX_SubmissionSummaryId] ON [dbo].[ImportDetails]([SubmissionSummaryId])
    CREATE INDEX [IX_MerchantId] ON [dbo].[ImportDetails]([MerchantId])
    CREATE INDEX [IX_PSEDetails_Id] ON [dbo].[ImportDetails]([PSEDetails_Id])
    CREATE TABLE [dbo].[ImportSummaries] (
        [Id] [int] NOT NULL IDENTITY,
        [PaymentYear] [int] NOT NULL,
        [ImportDate] [datetime2](7) NOT NULL,
        [FileName] [nvarchar](100),
        [RecordCount] [int],
        [ProcessLog] [nvarchar](1024),
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        [UserId] [bigint] NOT NULL,
        CONSTRAINT [PK_dbo.ImportSummaries] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[ImportSummaries]([UserId])
    CREATE TABLE [dbo].[AspNetUsers] (
        [Id] [bigint] NOT NULL IDENTITY,
        [IsDefaultPasswordChanged] [bit] NOT NULL,
        [Email] [nvarchar](256),
        [EmailConfirmed] [bit] NOT NULL,
        [PasswordHash] [nvarchar](max),
        [SecurityStamp] [nvarchar](max),
        [PhoneNumber] [nvarchar](max),
        [PhoneNumberConfirmed] [bit] NOT NULL,
        [TwoFactorEnabled] [bit] NOT NULL,
        [LockoutEndDateUtc] [datetime],
        [LockoutEnabled] [bit] NOT NULL,
        [AccessFailedCount] [int] NOT NULL,
        [UserName] [nvarchar](256) NOT NULL,
        CONSTRAINT [PK_dbo.AspNetUsers] PRIMARY KEY ([Id])
    )
    CREATE UNIQUE INDEX [UserNameIndex] ON [dbo].[AspNetUsers]([UserName])
    CREATE TABLE [dbo].[AspNetUserClaims] (
        [Id] [int] NOT NULL IDENTITY,
        [UserId] [bigint] NOT NULL,
        [ClaimType] [nvarchar](max),
        [ClaimValue] [nvarchar](max),
        CONSTRAINT [PK_dbo.AspNetUserClaims] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[AspNetUserClaims]([UserId])
    CREATE TABLE [dbo].[AspNetUserLogins] (
        [LoginProvider] [nvarchar](128) NOT NULL,
        [ProviderKey] [nvarchar](128) NOT NULL,
        [UserId] [bigint] NOT NULL,
        CONSTRAINT [PK_dbo.AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey], [UserId])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[AspNetUserLogins]([UserId])
    CREATE TABLE [dbo].[AspNetUserRoles] (
        [UserId] [bigint] NOT NULL,
        [RoleId] [bigint] NOT NULL,
        CONSTRAINT [PK_dbo.AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[AspNetUserRoles]([UserId])
    CREATE INDEX [IX_RoleId] ON [dbo].[AspNetUserRoles]([RoleId])
    CREATE TABLE [dbo].[MerchantDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [PayeeAccountNumber] [nvarchar](255),
        [TINType] [nvarchar](255),
        [PayeeTIN] [nvarchar](255),
        [PayeeOfficeCode] [nvarchar](255),
        [PayeeFirstName] [nvarchar](255),
        [PayeeSecondName] [nvarchar](255),
        [PayeeMailingAddress] [nvarchar](255),
        [PayeeCity] [nvarchar](40),
        [PayeeState] [nvarchar](2),
        [PayeeZIP] [nvarchar](9),
        [FilerIndicatorType] [nvarchar](255),
        [PaymentIndicatorType] [nvarchar](255),
        [MCC] [nvarchar](255),
        [CFSF] [nvarchar](2),
        [PayerId] [int] NOT NULL,
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        [UserId] [bigint] NOT NULL,
        [PaymentYear] [int] NOT NULL,
        CONSTRAINT [PK_dbo.MerchantDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_PayerId] ON [dbo].[MerchantDetails]([PayerId])
    CREATE INDEX [IX_UserId] ON [dbo].[MerchantDetails]([UserId])
    CREATE TABLE [dbo].[PayerDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [CFSF] [nvarchar](2),
        [PayerTIN] [nvarchar](9),
        [PayerNameControl] [nvarchar](4),
        [LastFilingIndicator] [nvarchar](1),
        [ReturnType] [nvarchar](2),
        [AmountCodes] [nvarchar](16),
        [PayerForeignEntityIndicator] [nvarchar](1),
        [FirstPayerName] [nvarchar](40),
        [SecondPayerName] [nvarchar](40),
        [TransferAgentIndicator] [nvarchar](1),
        [PayerShippingAddress] [nvarchar](40),
        [PayerCity] [nvarchar](40),
        [PayerState] [nvarchar](2),
        [PayerZIP] [nvarchar](9),
        [PayerTelephoneNumber] [nvarchar](15),
        [TransmitterId] [int] NOT NULL,
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        [PaymentYear] [int] NOT NULL,
        CONSTRAINT [PK_dbo.PayerDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_TransmitterId] ON [dbo].[PayerDetails]([TransmitterId])
    CREATE TABLE [dbo].[TransmitterDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [TransmitterTIN] [nvarchar](9),
        [TransmitterControlCode] [nvarchar](5),
        [TestFileIndicator] [nvarchar](1),
        [TransmitterForeignEntityIndicator] [nvarchar](1),
        [TransmitterName] [nvarchar](40),
        [TransmitterNameContinued] [nvarchar](40),
        [CompanyName] [nvarchar](40),
        [CompanyNameContinued] [nvarchar](40),
        [CompanyMailingAddress] [nvarchar](40),
        [CompanyCity] [nvarchar](40),
        [CompanyState] [nvarchar](2),
        [CompanyZIP] [nvarchar](9),
        [TotalNumberofPayees] [int] NOT NULL,
        [ContactName] [nvarchar](40),
        [ContactTelephoneNumber] [nvarchar](15),
        [ContactEmailAddress] [nvarchar](50),
        [VendorIndicator] [nvarchar](1),
        [VendorName] [nvarchar](40),
        [VendorMailingAddress] [nvarchar](40),
        [VendorCity] [nvarchar](40),
        [VendorState] [nvarchar](2),
        [VendorZIP] [nvarchar](9),
        [VendorContactName] [nvarchar](40),
        [VendorContactTelephoneNumber] [nvarchar](15),
        [VendorForeignEntityIndicator] [nvarchar](1),
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        [PaymentYear] [int] NOT NULL,
        CONSTRAINT [PK_dbo.TransmitterDetails] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[SubmissionSummaries] (
        [Id] [int] NOT NULL IDENTITY,
        [PaymentYear] [int] NOT NULL,
        [SubmissionDate] [datetime2](7) NOT NULL,
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        [UserId] [bigint] NOT NULL,
        [Status_Id] [int],
        CONSTRAINT [PK_dbo.SubmissionSummaries] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[SubmissionSummaries]([UserId])
    CREATE INDEX [IX_Status_Id] ON [dbo].[SubmissionSummaries]([Status_Id])
    CREATE TABLE [dbo].[SubmissionDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [AccountNo] [nvarchar](20),
        [SubmissionId] [int] NOT NULL,
        [SubmissionType] [int] NOT NULL,
        [PseId] [int],
        [TINType] [nvarchar](1),
        [TIN] [nvarchar](9),
        [PayerOfficeCode] [nvarchar](4),
        [GrossAmount] [decimal](18, 2),
        [CNPTransactionAmount] [decimal](18, 2),
        [FederalWithHoldingAmount] [decimal](18, 2),
        [JanuaryAmount] [decimal](18, 2),
        [FebruaryAmount] [decimal](18, 2),
        [MarchAmount] [decimal](18, 2),
        [AprilAmount] [decimal](18, 2),
        [MayAmount] [decimal](18, 2),
        [JuneAmount] [decimal](18, 2),
        [JulyAmount] [decimal](18, 2),
        [AugustAmount] [decimal](18, 2),
        [SeptemberAmount] [decimal](18, 2),
        [OctoberAmount] [decimal](18, 2),
        [NovemberAmount] [decimal](18, 2),
        [DecemberAmount] [decimal](18, 2),
        [ForeignCountryIndicator] [nvarchar](1),
        [FirstPayeeName] [nvarchar](40),
        [SecondPayeeName] [nvarchar](40),
        [PayeeMailingAddress] [nvarchar](40),
        [PayeeCity] [nvarchar](40),
        [PayeeState] [nvarchar](2),
        [PayeeZipCode] [nvarchar](9),
        [SecondTINNoticed] [nvarchar](1),
        [FillerIndicatorType] [nvarchar](1),
        [PaymentIndicatorType] [nvarchar](1),
        [TransactionCount] [int] NOT NULL,
        [MerchantCategoryCode] [nvarchar](4),
        [SpecialDataEntry] [nvarchar](60),
        [StateWithHolding] [decimal](18, 2),
        [LocalWithHolding] [decimal](18, 2),
        [CFSF] [nvarchar](2),
        [NameControl] [nvarchar](4),
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        [MerchantId] [int],
        CONSTRAINT [PK_dbo.SubmissionDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_SubmissionId] ON [dbo].[SubmissionDetails]([SubmissionId])
    CREATE INDEX [IX_PseId] ON [dbo].[SubmissionDetails]([PseId])
    CREATE INDEX [IX_MerchantId] ON [dbo].[SubmissionDetails]([MerchantId])
    CREATE TABLE [dbo].[PSEDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [TransmitterTIN] [nvarchar](9),
        [TransmitterControlCode] [nvarchar](5),
        [TestFileIndicator] [nvarchar](1),
        [TransmitterForeignEntityIndicator] [nvarchar](1),
        [TransmitterName] [nvarchar](40),
        [TransmitterNameContinued] [nvarchar](40),
        [CompanyName] [nvarchar](40),
        [CompanyNameContinued] [nvarchar](40),
        [CompanyMailingAddress] [nvarchar](40),
        [CompanyCity] [nvarchar](40),
        [CompanyState] [nvarchar](2),
        [CompanyZIP] [nvarchar](9),
        [TotalNumberofPayees] [int] NOT NULL,
        [ContactName] [nvarchar](40),
        [ContactTelephoneNumber] [nvarchar](15),
        [ContactEmailAddress] [nvarchar](50),
        [VendorIndicator] [nvarchar](1),
        [VendorName] [nvarchar](40),
        [VendorMailingAddress] [nvarchar](40),
        [VendorCity] [nvarchar](40),
        [VendorState] [nvarchar](2),
        [VendorZIP] [nvarchar](9),
        [VendorContactName] [nvarchar](40),
        [VendorContactTelephoneNumber] [nvarchar](15),
        [VendorForeignEntityIndicator] [nvarchar](1),
        [CFSF] [nvarchar](1),
        [PayerTIN] [nvarchar](9),
        [PayerNameControl] [nvarchar](4),
        [LastFilingIndicator] [nvarchar](1),
        [ReturnType] [nvarchar](2),
        [AmountCodes] [nvarchar](16),
        [PayerForeignEntityIndicator] [nvarchar](1),
        [FirstPayerName] [nvarchar](40),
        [SecondPayerName] [nvarchar](40),
        [TransferAgentIndicator] [nvarchar](1),
        [PayerShippingAddress] [nvarchar](40),
        [PayerCity] [nvarchar](40),
        [PayerState] [nvarchar](2),
        [PayerZIP] [nvarchar](9),
        [PayerTelephoneNumber] [nvarchar](15),
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        CONSTRAINT [PK_dbo.PSEDetails] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[RawTransactions] (
        [Id] [int] NOT NULL IDENTITY,
        [PayeeAccountNumber] [nvarchar](20),
        [TransactionAmount] [decimal](18, 2),
        [TransactionDate] [datetime2](7) NOT NULL,
        [TransactionType] [nvarchar](3),
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        [UserId] [bigint] NOT NULL,
        CONSTRAINT [PK_dbo.RawTransactions] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[RawTransactions]([UserId])
    CREATE TABLE [dbo].[RawTransactionStagings] (
        [Id] [int] NOT NULL IDENTITY,
        [TINType] [nvarchar](255),
        [PayeeTIN] [nvarchar](255),
        [PayeeAccountNumber] [nvarchar](255),
        [PayeeOfficeCode] [nvarchar](255),
        [CardPresentTransactions] [nvarchar](255),
        [FederalIncomeTaxWithheld] [nvarchar](255),
        [StateIncomeTaxWithheld] [nvarchar](255),
        [TransactionAmount] [nvarchar](255),
        [TransactionDate] [nvarchar](255),
        [TransactionType] [nvarchar](255),
        [PayeeFirstName] [nvarchar](255),
        [PayeeSecondName] [nvarchar](255),
        [PayeeMailingAddress] [nvarchar](255),
        [PayeeCity] [nvarchar](255),
        [PayeeState] [nvarchar](255),
        [PayeeZIP] [nvarchar](255),
        [FilerIndicatorType] [nvarchar](255),
        [PaymentIndicatorType] [nvarchar](255),
        [MCC] [nvarchar](255),
        CONSTRAINT [PK_dbo.RawTransactionStagings] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[AspNetRoles] (
        [Id] [bigint] NOT NULL IDENTITY,
        [Name] [nvarchar](256) NOT NULL,
        CONSTRAINT [PK_dbo.AspNetRoles] PRIMARY KEY ([Id])
    )
    CREATE UNIQUE INDEX [RoleNameIndex] ON [dbo].[AspNetRoles]([Name])
    CREATE TABLE [dbo].[Status] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](255),
        CONSTRAINT [PK_dbo.Status] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[SubmissionStatus] (
        [Id] [int] NOT NULL IDENTITY,
        [PaymentYear] [int] NOT NULL,
        [AccountNumber] [nvarchar](20),
        [ProcessingDate] [datetime2](7) NOT NULL,
        [StatusId] [int] NOT NULL,
        [IsActive] [bit] NOT NULL,
        [DateAdded] [datetime2](7) NOT NULL,
        CONSTRAINT [PK_dbo.SubmissionStatus] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_StatusId] ON [dbo].[SubmissionStatus]([StatusId])
    CREATE TABLE [dbo].[TINStatus] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](255),
        CONSTRAINT [PK_dbo.TINStatus] PRIMARY KEY ([Id])
    )
    ALTER TABLE [dbo].[ImportDetails] ADD CONSTRAINT [FK_dbo.ImportDetails_dbo.ImportSummaries_ImportSummaryId] FOREIGN KEY ([ImportSummaryId]) REFERENCES [dbo].[ImportSummaries] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[ImportDetails] ADD CONSTRAINT [FK_dbo.ImportDetails_dbo.MerchantDetails_MerchantId] FOREIGN KEY ([MerchantId]) REFERENCES [dbo].[MerchantDetails] ([Id])
    ALTER TABLE [dbo].[ImportDetails] ADD CONSTRAINT [FK_dbo.ImportDetails_dbo.PSEDetails_PSEDetails_Id] FOREIGN KEY ([PSEDetails_Id]) REFERENCES [dbo].[PSEDetails] ([Id])
    ALTER TABLE [dbo].[ImportDetails] ADD CONSTRAINT [FK_dbo.ImportDetails_dbo.SubmissionSummaries_SubmissionSummaryId] FOREIGN KEY ([SubmissionSummaryId]) REFERENCES [dbo].[SubmissionSummaries] ([Id])
    ALTER TABLE [dbo].[ImportSummaries] ADD CONSTRAINT [FK_dbo.ImportSummaries_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[AspNetUserClaims] ADD CONSTRAINT [FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[AspNetUserLogins] ADD CONSTRAINT [FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[AspNetUserRoles] ADD CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[AspNetUserRoles] ADD CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[MerchantDetails] ADD CONSTRAINT [FK_dbo.MerchantDetails_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[MerchantDetails] ADD CONSTRAINT [FK_dbo.MerchantDetails_dbo.PayerDetails_PayerId] FOREIGN KEY ([PayerId]) REFERENCES [dbo].[PayerDetails] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[PayerDetails] ADD CONSTRAINT [FK_dbo.PayerDetails_dbo.TransmitterDetails_TransmitterId] FOREIGN KEY ([TransmitterId]) REFERENCES [dbo].[TransmitterDetails] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[SubmissionSummaries] ADD CONSTRAINT [FK_dbo.SubmissionSummaries_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[SubmissionSummaries] ADD CONSTRAINT [FK_dbo.SubmissionSummaries_dbo.Status_Status_Id] FOREIGN KEY ([Status_Id]) REFERENCES [dbo].[Status] ([Id])
    ALTER TABLE [dbo].[SubmissionDetails] ADD CONSTRAINT [FK_dbo.SubmissionDetails_dbo.MerchantDetails_MerchantId] FOREIGN KEY ([MerchantId]) REFERENCES [dbo].[MerchantDetails] ([Id])
    ALTER TABLE [dbo].[SubmissionDetails] ADD CONSTRAINT [FK_dbo.SubmissionDetails_dbo.PSEDetails_PseId] FOREIGN KEY ([PseId]) REFERENCES [dbo].[PSEDetails] ([Id])
    ALTER TABLE [dbo].[SubmissionDetails] ADD CONSTRAINT [FK_dbo.SubmissionDetails_dbo.SubmissionSummaries_SubmissionId] FOREIGN KEY ([SubmissionId]) REFERENCES [dbo].[SubmissionSummaries] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[RawTransactions] ADD CONSTRAINT [FK_dbo.RawTransactions_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[SubmissionStatus] ADD CONSTRAINT [FK_dbo.SubmissionStatus_dbo.Status_StatusId] FOREIGN KEY ([StatusId]) REFERENCES [dbo].[Status] ([Id]) ON DELETE CASCADE
    CREATE TABLE [dbo].[__MigrationHistory] (
        [MigrationId] [nvarchar](150) NOT NULL,
        [ContextKey] [nvarchar](300) NOT NULL,
        [Model] [varbinary](max) NOT NULL,
        [ProductVersion] [nvarchar](32) NOT NULL,
        CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
    )
    INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
    VALUES (N'201703200937411_UAT', N'Bill2Pay.Model.DataContextMigrations.Configuration',  
END

IF @CurrentMigration < '201703231930349_clean'
BEGIN
    EXECUTE sp_rename @objname = N'dbo.ImportDetails.AccountNo', @newname = N'AccountNumber', @objtype = N'COLUMN'
    EXECUTE sp_rename @objname = N'dbo.MerchantDetails.PayeeFirstName', @newname = N'FirstPayeeName', @objtype = N'COLUMN'
    EXECUTE sp_rename @objname = N'dbo.MerchantDetails.PayeeSecondName', @newname = N'SecondPayeeName', @objtype = N'COLUMN'
    EXECUTE sp_rename @objname = N'dbo.SubmissionDetails.AccountNo', @newname = N'AccountNumber', @objtype = N'COLUMN'
    ALTER TABLE [dbo].[ImportDetails] ALTER COLUMN [AccountNumber] [nvarchar](20) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [FirstPayeeName] [nvarchar](40) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [SecondPayeeName] [nvarchar](40) NULL
    ALTER TABLE [dbo].[SubmissionDetails] ALTER COLUMN [AccountNumber] [nvarchar](20) NULL
    ALTER TABLE [dbo].[ImportDetails] ALTER COLUMN [CFSF] [nvarchar](1) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [PayeeAccountNumber] [nvarchar](20) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [TINType] [nvarchar](1) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [PayeeTIN] [nvarchar](9) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [PayeeOfficeCode] [nvarchar](4) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [PayeeMailingAddress] [nvarchar](40) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [FilerIndicatorType] [nvarchar](1) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [PaymentIndicatorType] [nvarchar](1) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [MCC] [nvarchar](4) NULL
    ALTER TABLE [dbo].[MerchantDetails] ALTER COLUMN [CFSF] [nvarchar](1) NULL
    ALTER TABLE [dbo].[PayerDetails] ALTER COLUMN [CFSF] [nvarchar](1) NULL
    ALTER TABLE [dbo].[SubmissionDetails] ALTER COLUMN [CFSF] [nvarchar](1) NULL
    ALTER TABLE [dbo].[RawTransactionStagings] ALTER COLUMN [PayeeAccountNumber] [nvarchar](20) NULL
    ALTER TABLE [dbo].[RawTransactionStagings] ALTER COLUMN [TransactionAmount] [nvarchar](20) NULL
    ALTER TABLE [dbo].[RawTransactionStagings] ALTER COLUMN [TransactionDate] [nvarchar](32) NULL
    ALTER TABLE [dbo].[RawTransactionStagings] ALTER COLUMN [TransactionType] [nvarchar](1) NULL
    DECLARE @var0 nvarchar(128)
    SELECT @var0 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'TINType';
    IF @var0 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var0 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [TINType]
    DECLARE @var1 nvarchar(128)
    SELECT @var1 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PayeeTIN';
    IF @var1 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var1 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PayeeTIN]
    DECLARE @var2 nvarchar(128)
    SELECT @var2 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PayeeOfficeCode';
    IF @var2 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var2 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PayeeOfficeCode]
    DECLARE @var3 nvarchar(128)
    SELECT @var3 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'CardPresentTransactions';
    IF @var3 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var3 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [CardPresentTransactions]
    DECLARE @var4 nvarchar(128)
    SELECT @var4 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'FederalIncomeTaxWithheld';
    IF @var4 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var4 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [FederalIncomeTaxWithheld]
    DECLARE @var5 nvarchar(128)
    SELECT @var5 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'StateIncomeTaxWithheld';
    IF @var5 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var5 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [StateIncomeTaxWithheld]
    DECLARE @var6 nvarchar(128)
    SELECT @var6 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PayeeFirstName';
    IF @var6 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var6 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PayeeFirstName]
    DECLARE @var7 nvarchar(128)
    SELECT @var7 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PayeeSecondName';
    IF @var7 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var7 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PayeeSecondName]
    DECLARE @var8 nvarchar(128)
    SELECT @var8 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PayeeMailingAddress';
    IF @var8 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var8 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PayeeMailingAddress]
    DECLARE @var9 nvarchar(128)
    SELECT @var9 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PayeeCity';
    IF @var9 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var9 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PayeeCity]
    DECLARE @var10 nvarchar(128)
    SELECT @var10 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PayeeState';
    IF @var10 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var10 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PayeeState]
    DECLARE @var11 nvarchar(128)
    SELECT @var11 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PayeeZIP';
    IF @var11 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var11 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PayeeZIP]
    DECLARE @var12 nvarchar(128)
    SELECT @var12 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'FilerIndicatorType';
    IF @var12 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var12 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [FilerIndicatorType]
    DECLARE @var13 nvarchar(128)
    SELECT @var13 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'PaymentIndicatorType';
    IF @var13 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var13 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [PaymentIndicatorType]
    DECLARE @var14 nvarchar(128)
    SELECT @var14 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.RawTransactionStagings')
    AND col_name(parent_object_id, parent_column_id) = 'MCC';
    IF @var14 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[RawTransactionStagings] DROP CONSTRAINT [' + @var14 + ']')
    ALTER TABLE [dbo].[RawTransactionStagings] DROP COLUMN [MCC]
    INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
    VALUES (N'201703231930349_clean', N'Bill2Pay.Model.DataContextMigrations.Configuration',  
END

IF @CurrentMigration < '201703240748420_clean2'
BEGIN
    ALTER TABLE [dbo].[RawTransactionStagings] ALTER COLUMN [TransactionType] [nvarchar](3) NULL
    DECLARE @var15 nvarchar(128)
    SELECT @var15 = name
    FROM sys.default_constraints
    WHERE parent_object_id = object_id(N'dbo.MerchantDetails')
    AND col_name(parent_object_id, parent_column_id) = 'PaymentYear';
    IF @var15 IS NOT NULL
        EXECUTE('ALTER TABLE [dbo].[MerchantDetails] DROP CONSTRAINT [' + @var15 + ']')
    ALTER TABLE [dbo].[MerchantDetails] DROP COLUMN [PaymentYear]
    INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
    VALUES (N'201703240748420_clean2', N'Bill2Pay.Model.DataContextMigrations.Configuration',  
END

GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'TF' AND name = 'ImportDataSummary')
DROP FUNCTION ImportDataSummary
GO

-- =============================================
-- Author:		RS Software
-- Create date: 03/10/2017
-- Description:	Generating Import Summary data 
-- =============================================
CREATE FUNCTION [ImportDataSummary]
(
	@PAYERID INT,
	@YEAR INT
)
RETURNS @K1099SUMMARYCHART TABLE(
		TransactionYear INT,
		PayeeAccountNumber NVARCHAR(20),
		JANUARY DECIMAL(19,2),
		FEBRUARY DECIMAL(19,2),
		MARCH DECIMAL(19,2),
		APRIL DECIMAL(19,2),
		MAY DECIMAL(19,2),
		JUNE DECIMAL(19,2),
		JULY DECIMAL(19,2),
		AUGUST DECIMAL(19,2),
		SEPTEMBER DECIMAL(19,2),
		OCTOBOR DECIMAL(19,2),
		NOVEMBER DECIMAL(19,2),
		DECEMBER DECIMAL(19,2),
		TotalCPAmount DECIMAL(19,2),
		GrossAmount DECIMAL(19,2),
		TotalTransaction INT,
		ImportDetailsId INT,
		SubmissionSummaryId INT,
		SubmissionStatusId INT,
		TINCheckStatus NVARCHAR(2),
		TINCheckRemarks NVARCHAR(512),
		StatusId INT
	)
	 
AS

BEGIN
	DECLARE @TEMPSUMMARY TABLE(
		TransactionYear INT,
		TransactionMonth  INT,
		[PayeeAccountNumber] NVARCHAR(256),
		TransactionAmount DECIMAL(19,2),
		TransactionType NVARCHAR(50),
		TransactionCount INT
	)

	INSERT INTO @TEMPSUMMARY
	SELECT TransactionYear,TransactionMonth,[PayeeAccountNumber],SUM(TransactionAmount) AS TransactionAmount,TransactionType,COUNT(1) AS TransactionCount
	
	FROM 
		(SELECT [PayeeAccountNumber],YEAR(TransactionDate) AS TransactionYear,
		MONTH(TransactionDate) AS TransactionMonth,TransactionAmount,TransactionType
		FROM [RawTransactions] WHERE IsActive = 1
	) P
	
	GROUP BY 
	TransactionYear,TransactionMonth,[PayeeAccountNumber],TransactionType
	ORDER BY 
	TransactionMonth,PayeeAccountNumber
	

	INSERT INTO @K1099SUMMARYCHART(TransactionYear,PayeeAccountNumber
	,JANUARY,FEBRUARY,MARCH,APRIL,MAY,JUNE,JULY,AUGUST,SEPTEMBER,OCTOBOR,NOVEMBER,DECEMBER)
	SELECT TransactionYear,
	PIV.PayeeAccountNumber,
	[1] AS JANUARY,
	[2] AS FEBRUARY,
	[3] AS MARCH,
	[4] AS APRIL,
	[5] AS MAY,
	[6] AS JUNE,
	[7] AS JULY,
	[8] AS AUGUST,
	[9] AS SEPTEMBER,
	[10] AS OCTOBOR,
	[11] AS NOVEMBER,
	[12] AS DECEMBER
	FROM 
	(
	  SELECT TransactionYear,TransactionMonth,PayeeAccountNumber,TransactionAmount
	  FROM @TEMPSUMMARY
	) src
	pivot
	(
	  SUM(TransactionAmount) 
	  FOR TransactionMonth in ([1], [2], [3],[4],[5],[6],[7],[8],[9],[10],[11],[12])
	) PIV
	INNER JOIN [MerchantDetails] M ON M.PayeeAccountNumber = PIV.PayeeAccountNumber AND M.IsActive = 1
	INNER JOIN [PayerDetails] P ON P.ID = M.PayerId AND P.IsActive = 1 AND P.ID = @PAYERID
	WHERE TransactionYear = @YEAR


	UPDATE CHART SET
		CHART.GrossAmount = GOSS.TransactionAmount
	FROM @K1099SUMMARYCHART CHART
	LEFT JOIN (
		SELECT TransactionYear,PayeeAccountNumber,SUM(TransactionAmount) AS TransactionAmount
			FROM @TEMPSUMMARY
			GROUP BY TransactionYear,PayeeAccountNumber
		)GOSS ON GOSS.TransactionYear= CHART.TransactionYear 
		AND GOSS.PayeeAccountNumber = CHART.PayeeAccountNumber 

	UPDATE CHART SET
		CHART.TotalCPAmount = CNP.TransactionAmount
	FROM @K1099SUMMARYCHART CHART
	LEFT JOIN (
			SELECT TransactionYear,PayeeAccountNumber,TransactionType, SUM(TransactionAmount) AS TransactionAmount
			FROM @TEMPSUMMARY
			GROUP BY TransactionYear,PayeeAccountNumber,TransactionType
		)CNP ON CNP.TransactionYear= CHART.TransactionYear 
		AND CNP.PayeeAccountNumber = CHART.PayeeAccountNumber AND CNP.TransactionType = 'CNP'
	
	UPDATE CHART SET
		CHART.TotalTransaction = C.TransactionCount
	FROM @K1099SUMMARYCHART CHART
	LEFT JOIN (
		SELECT TransactionYear,PayeeAccountNumber,SUM(TransactionCount) AS TransactionCount
		FROM @TEMPSUMMARY
		GROUP BY TransactionYear,PayeeAccountNumber
	)C ON C.TransactionYear= CHART.TransactionYear 
		AND C.PayeeAccountNumber = CHART.PayeeAccountNumber

	UPDATE CHART SET
		CHART.ImportDetailsId = EXT.ImportDetailsId, 
		CHART.SubmissionSummaryId = EXT.SubmissionSummaryId ,
		CHART.SubmissionStatusId = EXT.SubmissionStatusId ,
		CHART.StatusId  = EXT.StatusId ,
		CHART.TINCheckStatus = EXT.TINCheckStatus,
		CHART.TINCheckRemarks = EXT.TINCheckRemarks
		
		
	FROM @K1099SUMMARYCHART CHART
	INNER JOIN (
	SELECT D.AccountNumber,
		D.Id ImportDetailsId, 
		D.SubmissionSummaryId ,
		SS.Id SubmissionStatusId,
		SS.StatusId ,
		D.TINCheckStatus,
		D.TINCheckRemarks FROM [ImportDetails] D 
	INNER JOIN [ImportSummaries] S ON S.Id = D.ImportSummaryId AND S.IsActive = 1 AND S.PaymentYear = @YEAR
	INNER JOIN [MerchantDetails] M ON M.ID = D.MerchantId AND M.IsActive = 1
	INNER JOIN [PayerDetails] P ON P.ID = M.PayerId AND P.IsActive = 1 AND P.ID = @PAYERID
	LEFT JOIN [SubmissionStatus] SS ON D.AccountNumber = SS.AccountNumber AND SS.IsActive =1
	WHERE D.IsActive =1   
	) EXT ON CHART.PayeeAccountNumber = EXT.AccountNumber 

	RETURN
END

GO
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'PreImportDataProcessing')
DROP PROCEDURE PreImportDataProcessing
GO

-- =============================================
-- Author:		RS Software
-- Create date: 03/10/2017
-- Description:	Clearing all record from the staging table during transaction import 
-- =============================================
CREATE PROCEDURE [PreImportDataProcessing]
	
AS
	-- CLEAR ALL RECORD
	DELETE FROM RawTransactionStagings


RETURN 
GO

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'PostImportDataProcessing')
DROP PROCEDURE PostImportDataProcessing
GO

-- =============================================
-- Author:		RS Software
-- Create date: 03/10/2017
-- Description:	Executing Data processing after transaction imported into Staging
-- =============================================
CREATE PROCEDURE [PostImportDataProcessing]
	@YEAR INT = 2016,
	@USERID BIGINT=1,
	@TOTALCOUNT INT=0,
	@FILENAME VARCHAR(255),
	@PAYERID INT
AS
	DECLARE 
	@SUMMARYID INT,
	@PROCESSLOG NVARCHAR(1024)='',
	@RECORDCOUNT INT;

	INSERT INTO ImportSummaries(PaymentYear,ImportDate,UserId,DateAdded,IsActive)
	values (@YEAR,GETDATE(),@USERID,GETDATE(),1)
	SET @SUMMARYID = @@IDENTITY

	DECLARE @K1099SUMMARYCHART TABLE(
		TransactionYear INT,
		PayeeAccountNumber NVARCHAR(20),
		JANUARY DECIMAL(19,2),
		FEBRUARY DECIMAL(19,2),
		MARCH DECIMAL(19,2),
		APRIL DECIMAL(19,2),
		MAY DECIMAL(19,2),
		JUNE DECIMAL(19,2),
		JULY DECIMAL(19,2),
		AUGUST DECIMAL(19,2),
		SEPTEMBER DECIMAL(19,2),
		OCTOBER DECIMAL(19,2),
		NOVEMBER DECIMAL(19,2),
		DECEMBER DECIMAL(19,2),
		TotalCPAmount DECIMAL(19,2),
		GrossAmount DECIMAL(19,2),
		TotalTransaction INT,
		ImportDetailsId INT,
		SubmissionSummaryId INT,
		SubmissionStatusId INT,
		TINCheckStatus NVARCHAR(2),
		TINCheckRemarks NVARCHAR(512),
		StatusId INT
	)

	BEGIN TRY  
	BEGIN TRANSACTION K1099

	SET @PROCESSLOG = '1099K: Import Process Starts' +CHAR(13)+CHAR(10)
	SET @PROCESSLOG = @PROCESSLOG + 'Import Date: '+CAST(GETDATE() AS VARCHAR) +CHAR(13)+CHAR(10)
	SET @PROCESSLOG = @PROCESSLOG + 'File Name: '+@FILENAME+CHAR(13)+CHAR(10)
	SET @PROCESSLOG = @PROCESSLOG + 'Transaction Count: '+CAST(@TOTALCOUNT AS VARCHAR) +CHAR(13)+CHAR(10)
	
	-- ARCHIVE EXISTING DATA
	UPDATE [RawTransactions] SET Isactive = 0 WHERE IsActive=1
	
	BEGIN TRY

		-- INSERT NEW DATA
		INSERT INTO [RawTransactions](PayeeAccountNumber,TransactionType,TransactionAmount,TransactionDate,IsActive,UserID,DateAdded)
		SELECT 
		[PayeeAccountNumber], 
		CASE WHEN [TransactionType] = 7 THEN 'CNP' ELSE 'CP' END AS [TransactionType],
		CAST([TransactionAmount] AS DECIMAL(19,2)) AS TransactionAmount, 
		CAST([TransactionDate] AS DATE) AS TransactionDate,
		1,
		@USERID,
		GETDATE()
		FROM [RawTransactionStagings]

		SET @RECORDCOUNT = @@ROWCOUNT
		
	END TRY
	BEGIN CATCH
	PRINT ERROR_MESSAGE();
	SET @PROCESSLOG = @PROCESSLOG + 'INVALID DATA : '+ERROR_MESSAGE()+' ,ERROR CODE : ' +CAST(ERROR_NUMBER() AS VARCHAR)+''+CHAR(13)+CHAR(10)
	ROLLBACK TRANSACTION K1099
	GOTO ENDPROCESS
	END CATCH;
	
	INSERT INTO @K1099SUMMARYCHART
	SELECT * FROM [ImportDataSummary](@PAYERID,@YEAR)

	-- ARCHIVE EXISTING SUBMISSION STATUS
	UPDATE S
	SET S.IsActive = 0
	FROM SubmissionStatus S
	INNER JOIN @K1099SUMMARYCHART C ON S.Id = C.SubmissionStatusId AND ISNULL(C.StatusId,0) IN (0,1,2,3,4)
	
	-- CLEAR EXISTING DATA THAT ARE NOT SUBMITTED
	UPDATE D
	SET D.IsActive = 0
	FROM ImportDetails D
	INNER JOIN @K1099SUMMARYCHART C ON D.Id = C.ImportDetailsId AND ISNULL(C.StatusId,0) IN (0,1,2,3,4)

	DECLARE @PAYERNAME VARCHAR(127)
	SELECT @PAYERNAME = p.FirstPayerName FROM [PayerDetails] p where Id = @PAYERID

	INSERT INTO ImportDetails (AccountNumber,ImportSummaryId,TINCheckStatus,TINCheckRemarks,SubmissionSummaryId,TINType,TIN,
	PayerOfficeCode,GrossAmount,CNPTransactionAmount,FederalWithHoldingAmount,
	JanuaryAmount,FebruaryAmount,MarchAmount,AprilAmount,MayAmount,JuneAmount,JulyAmount,AugustAmount,
	SeptemberAmount,OctoberAmount,NovemberAmount,DecemberAmount,ForeignCountryIndicator,FirstPayeeName,
	SecondPayeeName,PayeeMailingAddress,PayeeCity,PayeeState,PayeeZipCode,SecondTINNoticed,FillerIndicatorType,
	PaymentIndicatorType,TransactionCount,MerchantId,MerchantCategoryCode,SpecialDataEntry,StateWithHolding,
	LocalWithHolding,CFSF,IsActive,DateAdded)

	SELECT C.PayeeAccountNumber,@SUMMARYID,C.TINCheckStatus,C.TINCheckRemarks,C.SubmissionSummaryId,D.TINType,D.PayeeTIN,
	D.PayeeOfficeCode,C.GrossAmount,C.TotalCPAmount,NULL,
	C.JANUARY,C.FEBRUARY,C.MARCH,C.APRIL,C.MAY,C.JUNE,C.JULY,C.AUGUST,
	C.SEPTEMBER,C.OCTOBER,C.NOVEMBER,C.DECEMBER,NULL,SUBSTRING(D.[FirstPayeeName],1,40), 
	SUBSTRING(D.[SecondPayeeName],1,40),SUBSTRING(D.[PayeeMailingAddress],1,40),SUBSTRING(D.[PayeeCity],1,40),D.[PayeeState],REPLACE(D.[PayeeZIP],'-',''),null,D.[FilerIndicatorType], 
	D.[PaymentIndicatorType],C.TotalTransaction,D.Id,D.[MCC],NULL,NULL,
	NULL,D.CFSF,1,GETDATE()

	FROM @K1099SUMMARYCHART C
	INNER JOIN  [MerchantDetails] D ON C.PayeeAccountNumber = D.PayeeAccountNumber 
		AND D.IsActive = 1 AND D.PayerId = @PAYERID
	WHERE ISNULL(C.StatusId,0) IN (0,1,2,3,4)

	SET @PROCESSLOG = @PROCESSLOG + 'Account associated with '+@PAYERNAME+':'+CAST(@@ROWCOUNT AS VARCHAR)+CHAR(13)+CHAR(10)

	----- Correction ------
	INSERT INTO SubmissionStatus (PaymentYear,AccountNumber,ProcessingDate,StatusId,IsActive,DateAdded)
	SELECT @YEAR ,C.PayeeAccountNumber ,GetDate(),4,1,GetDate()
	FROM  @K1099SUMMARYCHART C
	WHERE C.StatusId=3
	--------------------------------------------------------------------

	

	DECLARE @ORPHANT NVARCHAR(1024),@ORPHANTCOUNT INT

	SELECT @ORPHANTCOUNT = COUNT(*)
	FROM @K1099SUMMARYCHART S
	LEFT JOIN  [MerchantDetails] D ON S.PayeeAccountNumber = D.PayeeAccountNumber 
		AND D.IsActive = 1 AND D.PayerId = @PayerId
	WHERE S.TransactionYear = @YEAR AND ISNULL(S.StatusId,0) NOT IN (0,1,2,3,4)


	IF @ORPHANTCOUNT>0
	BEGIN
		SET @PROCESSLOG = @PROCESSLOG + 'Account not associated with '+@PAYERNAME+':'+CAST(@ORPHANTCOUNT AS VARCHAR)+CHAR(13)+CHAR(10)
	END

	SET @PROCESSLOG = @PROCESSLOG + 'Import Successful'+CHAR(13)+CHAR(10)

		COMMIT TRANSACTION K1099
		END TRY  
	BEGIN CATCH  
		SET @PROCESSLOG = @PROCESSLOG + 'EXCEPTION : '+ERROR_MESSAGE()
		ROLLBACK TRANSACTION K1099
	END CATCH 
	
	ENDPROCESS:

	UPDATE ImportSummaries SET
		RecordCount = @RECORDCOUNT,
		ProcessLog = @PROCESSLOG,
		[FileName] = @FILENAME,
		ImportDate = GETDATE()
	WHERE Id = @SUMMARYID
	
	

RETURN
GO