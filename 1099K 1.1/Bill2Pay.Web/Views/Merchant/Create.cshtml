@model Bill2Pay.Model.MerchantDetails

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MerchantDetails</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("AccountNumber", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayeeAccountNumber, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.PayeeAccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("TIN Type", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @*@Html.EditorFor(model => model.TINType, new { htmlAttributes = new { @class = "form-control", @required = "true" } })*@
                @Html.DropDownListFor(model => model.TINType, (IEnumerable<SelectListItem>)ViewBag.TINTypeLstList, "Select", htmlAttributes: new { @class = "form-control require" })
                @Html.ValidationMessageFor(model => model.TINType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("TIN", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayeeTIN, new { htmlAttributes = new { @class = "form-control", @required = "true", @maxlength = "9" } })
                @Html.ValidationMessageFor(model => model.PayeeTIN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("OfficeCode", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayeeOfficeCode, new { htmlAttributes = new { @class = "form-control", @maxlength = "4" } })
                @Html.ValidationMessageFor(model => model.PayeeOfficeCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayeeFirstName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayeeFirstName, new { htmlAttributes = new { @class = "form-control", @required = "true", @maxlength = "40" } })
                @Html.ValidationMessageFor(model => model.PayeeFirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayeeSecondName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayeeSecondName, new { htmlAttributes = new { @class = "form-control", @maxlength = "40" } })
                @Html.ValidationMessageFor(model => model.PayeeSecondName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mailing Address", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayeeMailingAddress, new { htmlAttributes = new { @class = "form-control", @required = "true", @maxlength = "40" } })
                @Html.ValidationMessageFor(model => model.PayeeMailingAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayeeCity, new { htmlAttributes = new { @class = "form-control", @required = "true", @maxlength = "40" } })
                @Html.ValidationMessageFor(model => model.PayeeCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("State", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.DropDownListFor(model=>model.PayeeState,(IEnumerable<SelectListItem>)ViewBag.StateList, "Select",  htmlAttributes: new { @class = "form-control require" } )

                @Html.ValidationMessageFor(model => model.PayeeState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("ZIP", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayeeZIP, new { htmlAttributes = new { @class = "form-control", @required = "true", @maxlength = "9" } })
                @Html.ValidationMessageFor(model => model.PayeeZIP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Filer Indicator Type", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @*@Html.EditorFor(model => model.FilerIndicatorType, new { htmlAttributes = new { @class = "form-control", @required = "true" } })*@
                @Html.DropDownListFor(model => model.FilerIndicatorType, (IEnumerable<SelectListItem>)ViewBag.FilerList, "Select", htmlAttributes: new { @class = "form-control require" })
                @Html.ValidationMessageFor(model => model.FilerIndicatorType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Payment Indicator Type", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @*@Html.EditorFor(model => model.PaymentIndicatorType, new { htmlAttributes = new { @class = "form-control", @required = "true" } })*@
                @Html.DropDownListFor(model => model.PaymentIndicatorType, (IEnumerable<SelectListItem>)ViewBag.PaymentIndicatorList, "Select", htmlAttributes: new { @class = "form-control require" })


                @Html.ValidationMessageFor(model => model.PaymentIndicatorType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Merchant Category Code", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.MCC, new { htmlAttributes = new { @class = "form-control", @required = "true", @maxlength = "4" } })
                @Html.ValidationMessageFor(model => model.MCC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("CS / SF", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CFSF, new { htmlAttributes = new { @class = "form-control", @maxlength = "2" } })
                @Html.ValidationMessageFor(model => model.CFSF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Payer",  htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.PayerId,(IEnumerable<SelectListItem>)ViewBag.PayerList,"Select" , htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PayerId, "", new { @class = "text-danger" })
            </div>
        </div>

        
        

        <div class="form-group">
            <div class="col-md-offset-3 col-md-8">
                <input class="btn btn-primary btn-block " type="submit" value="Sumbit"  />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
